{
  "welcome_message": "Bienvenue sur Training Material",
  "candidate_name": "Nom du candidat",
  "choose_lot": "Choisir un lot",
  "start_quiz": "Démarrer le quiz",
  "github_pat": "Entrez votre PAT GitHub",
  "validate_pat": "Valider le PAT",
  "pat_validated": "PAT validé avec succès !",
  "reset_pat": "Réinitialiser le PAT",
  "edit_questions": "Éditer les Questions",
  "filter_by_lot": "Filtrer par lot",
  "all_lots": "Tous les lots",
  "add_question": "Ajouter une question",
  "scores": "Scores",
  "result": "Résultat",
  "score_message": "Votre score :",
  "save_results": "Sauvegarder les résultats",
  "save_results_success": "Résultats sauvegardés avec succès !",
  "save_current_score": "Sauvegarder le score actuel",
  "save_current_success": "Score actuel sauvegardé avec succès !",
  "scores_local": "Score sauvegardé localement (aucun PAT fourni).",
  "validate": "Valider",
  "no_questions": "Aucune question disponible.",
  "select_answer": "Veuillez sélectionner une réponse.",
  "enter_name": "Veuillez entrer votre nom.",
  "select_lot_prompt": "Veuillez sélectionner un lot.",
  "questions_not_loaded": "Les questions n'ont pas été chargées.",
  "no_questions_loaded": "Aucune question n'a été chargée.",
  "no_questions_for_lot": "Aucune question disponible pour ce lot.",
  "no_questions_to_save": "Aucune question à sauvegarder.",
  "no_pat": "Aucun PAT GitHub fourni.",
  "invalid_pat": "PAT GitHub invalide.",
  "questions_load_error": "Erreur lors du chargement des questions : ",
  "questions_error": "Erreur lors de la sauvegarde des questions : ",
  "scores_error": "Erreur lors de la sauvegarde des scores : ",
  "scores_saved": "Scores sauvegardés avec succès !",
  "notification_scores": "Scores mis à jour sur GitHub.",
  "mermaid_editor_title": "Mermaid Live Editor",
  "mermaid_input_placeholder": "Écrivez votre code Mermaid ici...",
  "mermaid_empty": "Entrez du code Mermaid pour voir le rendu.",
  "mermaid_load_error": "Erreur : Impossible de charger Mermaid.",
  "mermaid_render_error": "Erreur de rendu Mermaid",
  "mermaid_export_error": "Aucun diagramme à exporter. Veuillez d'abord rendre un diagramme valide.",
  "loading": "Chargement...",
  "converter_title": "Convertisseur de Documents",
  "converter_file_label": "Charger un fichier :",
  "converter_text_label": "Ou entrez du texte libre :",
  "converter_text_placeholder": "Entrez du texte à convertir...",
  "converter_from_label": "Convertir depuis :",
  "converter_to_label": "Convertir vers :",
  "converter_button": "Convertir",
  "converter_empty": "Veuillez fournir un fichier ou du texte à convertir.",
  "converter_error": "Erreur lors de la conversion",
  "mammoth_load_error": "Erreur : Impossible de charger Mammoth.",
  "showdown_load_error": "Erreur : Impossible de charger Showdown.",
  "pdfjs_load_error": "Erreur : Impossible de charger pdf.js.",
  "file_read_error": "Erreur lors de la lecture du fichier",
  "download_result": "Télécharger le résultat",
  "json_validator_title": "Validateur JSON",
  "json_input_placeholder": "Entrez votre JSON ici... (ex. {\"key\": \"value\"})",
  "json_validate_button": "Valider JSON",
  "json_empty": "Veuillez entrer un JSON à valider.",
  "json_valid": "JSON valide !",
  "json_invalid": "JSON invalide",
  "ajv_load_error": "Erreur : Impossible de charger AJV.",
  "cicd_course_title": "Cours CI/CD",
  "cicd_course_content": "# Introduction au CI/CD\n\n## Qu'est-ce que le CI/CD ?\n\nLe **CI/CD** (Intégration Continue / Déploiement Continu) est une pratique DevOps qui permet d'automatiser le processus de développement logiciel. Elle se divise en deux parties principales :\n\n- **CI (Intégration Continue)** : Les développeurs intègrent fréquemment leur code dans un dépôt partagé, et chaque intégration est vérifiée par des tests automatisés.\n- **CD (Déploiement Continu)** : Le code testé est automatiquement déployé en production ou dans un environnement de staging.\n\n## Étapes typiques d'un pipeline CI/CD\n\n1. **Code** : Les développeurs écrivent et soumettent leur code via un système de contrôle de version (ex. Git).\n2. **Build** : Le code est compilé ou préparé pour les tests.\n3. **Test** : Des tests automatisés (unitaires, d'intégration, etc.) sont exécutés.\n4. **Déploiement** : Le code est déployé dans un environnement (staging ou production).\n\n## Outils populaires\n\n- **Jenkins** : Un serveur d'automatisation open-source.\n- **GitHub Actions** : Intégré à GitHub pour automatiser les workflows.\n- **GitLab CI/CD** : Intégré à GitLab pour gérer les pipelines.\n- **CircleCI** : Une plateforme CI/CD cloud.\n\n## Exemple de workflow GitHub Actions\n\n```yaml\nname: CI/CD Pipeline\non:\n  push:\n    branches: [ main ]\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n    - name: Set up Node.js\n      uses: actions/setup-node@v3\n      with:\n        node-version: '16'\n    - name: Install dependencies\n      run: npm install\n    - name: Run tests\n      run: npm test\n    - name: Deploy\n      run: echo \"Déploiement en production\"\n```\n\n## Avantages du CI/CD\n\n- **Rapidité** : Les déploiements sont plus fréquents et rapides.\n- **Qualité** : Les tests automatisés réduisent les bugs.\n- **Collaboration** : Les équipes travaillent plus efficacement.",
  "cicd_render_error": "Erreur lors du rendu du cours",
  "marked_load_error": "Erreur : Impossible de charger Marked.",
  "start_quiz_tab": "Démarrer le quiz",
  "edit_questions_tab": "Éditer Questions",
  "scores_tab": "Scores",
  "mermaid_editor_tab": "Mermaid Live Editor",
  "converter_tab": "Convertisseur de Documents",
  "json_validator_tab": "Validateur JSON",
  "cicd_course_tab": "Cours CI/CD",
  "logic_tests_tab": "Défis Logiques et Soft Skills",
  "close": "Fermer",
  "modal_details_title": "Détails de la question",
  "modal_question_fr": "Question (FR)",
  "modal_question_us": "Question (US)",
  "modal_options": "Options",
  "modal_lot": "Lot",
  "modal_type": "Type",
  "modal_details_unavailable": "Détails non disponibles ou format non pris en charge.",
  "correct": "Correct",
  "incorrect": "Incorrect",
  "incorrect_no_selection": "Incorrect (aucune réponse sélectionnée)",
  "mermaid_cheat_sheet_title": "Aide pour Mermaid Live Editor",
  "mermaid_cheat_sheet_instructions": "- Écrivez votre code Mermaid dans le champ à gauche.\n- Le diagramme sera automatiquement rendu à droite.\n- Utilisez les boutons ci-dessous pour insérer des exemples de code.\n- Cliquez sur \"Exporter en SVG\" ou \"Exporter en  PNG\" pour sauvegarder votre diagramme.",
  "mermaid_cheat_sheet_basic_syntax": "- Déclarez le type de diagramme avec `graph TD` (de haut en bas) ou `graph LR` (de gauche à droite).\n- Utilisez `-->` pour une flèche simple, `==>` pour une flèche épaisse, ou `-.->` pour une flèche en pointillés.\n- Ajoutez des labels aux flèches avec `|Texte|`, ex. : `A -->|Action| B`.\n- **Important :** N’utilisez pas de points-virgules (`;`) pour séparer les instructions. Utilisez des sauts de ligne.",
  "mermaid_cheat_sheet_example_1_title": "Exemple 1 : Diagramme de flux simple",
  "mermaid_cheat_sheet_example_1_code": "graph TD\n    A[Début] --> B[Étape 1]\n    B --> C[Étape 2]\n    C --> D[Fin]",
  "mermaid_cheat_sheet_example_2_title": "Exemple 2 : Diagramme avec labels et styles de flèches",
  "mermaid_cheat_sheet_example_2_code": "graph LR\n    A[Utilisateur] -->|Connexion| B[Serveur]\n    B ==> C[Base de données]\n    C -.-> D[Cache]",
  "mermaid_cheat_sheet_example_3_title": "Exemple 3 : Diagramme de séquence",
  "mermaid_cheat_sheet_example_3_code": "sequenceDiagram\n    participant A as Alice\n    participant B as Bob\n    A->>B: Bonjour Bob !\n    B-->>A: Salut Alice !",
  "mermaid_cheat_sheet_example_4_title": "Exemple 4 : Diagramme de classes",
  "mermaid_cheat_sheet_example_4_code": "classDiagram\n    class Animal {\n        +String name\n        +int age\n        +makeSound()\n    }\n    class Dog {\n        +String breed\n        +bark()\n    }\n    Animal <|-- Dog",
  "mermaid_cheat_sheet_example_5_title": "Exemple 5 : Diagramme d’états",
  "mermaid_cheat_sheet_example_5_code": "stateDiagram-v2\n    [*] --> Initial\n    Initial --> Processing : Start\n    Processing --> Success : Complete\n    Processing --> Failure : Error\n    Success --> [*]\n    Failure --> [*]",
  "mermaid_cheat_sheet_example_6_title": "Exemple 6 : Diagramme de flux avec styles personnalisés",
  "mermaid_cheat_sheet_example_6_code": "graph TD\n    A[Client] -->|Requête| B[Serveur]\n    B --> C[Base de données]\n    C --> D[Réponse]\n    D --> B\n    B --> A\n    classDef important fill:#f9a825,stroke:#333,stroke-width:2px\n    class A,B important",
  "mermaid_cheat_sheet_supported_types": "- `graph TD` : Diagramme de flux (de haut en bas).\n- `graph LR` : Diagramme de flux (de gauche à droite).\n- `sequenceDiagram` : Diagramme de séquence.\n- `classDiagram` : Diagramme de classes.\n- `stateDiagram` : Diagramme d’états.\n- `gantt` : Diagramme de Gantt.\n- `pie` : Diagramme circulaire.\n- `erDiagram` : Diagramme entité-relation.",
  "mermaid_cheat_sheet_common_errors": "- **Points-virgules (`;`) :** N’ajoutez pas de points-virgules après les flèches ou à la fin des lignes. Exemple incorrect : `A --> B;`. Correct : `A --> B`.\n- **Espaces manquants :** Assurez-vous qu’il y a un espace avant et après les flèches (`-->`, `|Texte|`). Exemple incorrect : `A-->B`. Correct : `A --> B`.\n- **Indentation :** L’indentation n’est pas strictement nécessaire, mais elle améliore la lisibilité.\n- **Mauvais type de diagramme :** Assurez-vous que le type de diagramme correspond à la syntaxe utilisée (ex. `sequenceDiagram` pour les diagrammes de séquence).",
  "mermaid_cheat_sheet_styling_tips": "- **Personnaliser les nœuds :** Utilisez `classDef` pour définir des styles. Exemple : `classDef important fill:#f9a825,stroke:#333,stroke-width:2px`.\n- **Appliquer des styles :** Ajoutez une classe à un nœud avec `class NomDuNœud NomDeLaClasse`, ex. : `class A important`.\n- **Couleurs des flèches :** Utilisez `stroke` dans `classDef` pour changer la couleur des flèches.\n- **Thèmes :** Changez le thème global avec `mermaid.initialize({ theme: 'dark' })` (par exemple, `default`, `dark`, `forest`, `neutral`).",
  "mermaid_cheat_sheet_use_cases": "- **Diagrammes de flux :** Idéal pour représenter des processus métier ou des workflows (ex. étapes d’un projet).\n- **Diagrammes de séquence :** Parfait pour montrer les interactions entre acteurs dans un système (ex. communication client-serveur).\n- **Diagrammes de classes :** Utile pour modéliser des structures orientées objet (ex. relations entre classes).\n- **Diagrammes d’états :** Représente les transitions d’état dans un système (ex. cycle de vie d’un objet).\n- **Diagrammes de Gantt :** Planifiez des projets avec des tâches et des durées.\n- **Diagrammes entité-relation :** Modélisez des bases de données relationnelles.",
  "mermaid_cheat_sheet_tips": "- Utilisez des crochets pour des nœuds rectangulaires : `A[Texte]`.\n- Utilisez des parenthèses pour des nœuds ronds : `A(Texte)`.\n- Utilisez des accolades pour des nœuds en losange : `A{Texte}`.\n- Ajoutez des sous-graphes avec `subgraph Nom [Titre]` pour organiser les diagrammes complexes.\n- Utilisez des commentaires avec `%% Commentaire` pour documenter votre code.\n- Testez vos diagrammes avec des exemples simples avant d’ajouter des complexités.",
  "mermaid_cheat_sheet_show": "Afficher l’aide",
  "mermaid_cheat_sheet_hide": "Masquer l’aide",
  "mermaid_cheat_sheet_insert_example_1": "Insérer Exemple 1",
  "mermaid_cheat_sheet_insert_example_2": "Insérer Exemple 2",
  "mermaid_cheat_sheet_insert_example_3": "Insérer Exemple 3",
  "mermaid_cheat_sheet_insert_example_4": "Insérer Exemple 4",
  "mermaid_cheat_sheet_insert_example_5": "Insérer Exemple 5",
  "mermaid_cheat_sheet_insert_example_6": "Insérer Exemple 6",
  "export_svg": "Exporter en SVG",
  "export_png": "Exporter en PNG",
  "logic_tests_title": "Défis Logiques et Soft Skills",
  "logic_test_1_title": "Défi 1 : L’angle de l’horloge à 15h15",
  "logic_test_1_description": "Il est 15h15. Quel est l’écart en degrés entre la petite et la grande aiguille ? Attention, l’horloge peut être un peu capricieuse !",
  "logic_test_1_answer_label": "Votre réponse (en degrés) :",
  "logic_test_1_submit": "Valider",
  "logic_test_1_correction": "À 15h00, la petite aiguille est sur le 3 (90°). À 15h15, la grande aiguille est aussi sur le 3 (90°), mais la petite aiguille a avancé d’un quart de l’heure suivant (un créneau horaire = 30°, donc un quart = 7,5°). L’écart est donc de 7,5°.",
  "logic_test_1_soft_skills": "Pensée analytique, Concentration sous pression",
  "logic_test_2_title": "Défi 2 : Couleurs de chaussettes",
  "logic_test_2_description": "Vous avez un tiroir avec 6 chaussettes noires, 10 rouges, et 8 bleues, mélangées dans le noir. Combien de chaussettes devez-vous tirer pour être sûr d’avoir une paire de la même couleur ? Tirez les chaussettes en les glissant dans la zone ci-dessous pour expérimenter, puis entrez votre réponse !",
  "logic_test_2_hint": "Astuce : Pensez au pire scénario pour garantir une paire !",
  "logic_test_2_answer_label": "Combien de chaussettes faut-il tirer ?",
  "logic_test_2_submit": "Valider",
  "logic_test_2_correction": "Il y a 3 couleurs, donc dans le pire des cas, vous tirez une chaussette de chaque couleur (3 chaussettes). La 4e chaussette sera forcément de la même couleur qu’une des précédentes, garantissant une paire. Réponse : 4 chaussettes.",
  "logic_test_2_soft_skills": "Raisonnement probabiliste, Prise de décision rapide, Gestion des distractions",
  "logic_test_3_title": "Défi 3 : Les moutons et la rivière",
  "logic_test_3_description": "Un fermier doit faire traverser une rivière à un loup, une chèvre, et un chou. Il ne peut transporter qu’un seul élément à la fois, et il ne peut pas laisser le loup seul avec la chèvre (le loup mangerait la chèvre), ni la chèvre seule avec le chou (la chèvre mangerait le chou). Aidez-le à faire traverser tout le monde en un minimum de traversées !",
  "logic_test_3_submit": "Terminer",
  "logic_test_3_wolf_eats_goat": "Le loup a mangé la chèvre !",
  "logic_test_3_goat_eats_cabbage": "La chèvre a mangé le chou !",
  "logic_test_3_correction": "Le fermier doit faire 7 traversées : 1) Emmener la chèvre, 2) Revenir seul, 3) Emmener le chou, 4) Ramener la chèvre, 5) Emmener le loup, 6) Revenir seul, 7) Emmener la chèvre.",
  "logic_test_3_soft_skills": "Planification, Gestion du stress, Résolution de problèmes",
  "logic_test_4_title": "Défi 4 : Test de personnalité des couleurs",
  "logic_test_4_description": "Choisissez la couleur qui vous représente le mieux : Rouge (action, énergie), Bleu (analyse, logique), Vert (empathie, communication), Jaune (créativité, imagination). Mais attention, les couleurs bougent !",
  "logic_test_4_result_red": "Vous êtes une personne d'action et d'énergie (Dominance).",
  "logic_test_4_result_blue": "Vous êtes analytique et logique (Influence).",
  "logic_test_4_result_green": "Vous êtes empathique et communicatif (Stabilité).",
  "logic_test_4_result_yellow": "Vous êtes créatif et imaginatif (Conformité).",
  "logic_test_4_correction": "Il n’y a pas de mauvaise réponse, mais vous deviez choisir une couleur avant la fin du temps !",
  "logic_test_4_soft_skills": "Prise de décision rapide, Adaptabilité, Concentration",
  "logic_test_5_title": "Défi 5 : Les trois maisons",
  "logic_test_5_description": "Il y a trois maisons (A, B, C) et trois services (eau, électricité, gaz). Chaque maison doit être connectée à chaque service, mais les câbles ne doivent pas se croiser. Connectez les câbles correctement !",
  "logic_test_5_service_water": "Eau",
  "logic_test_5_service_electricity": "Électricité",
  "logic_test_5_service_gas": "Gaz",
  "logic_test_5_submit": "Valider",
  "logic_test_5_correction": "Dans un plan 2D, il est impossible de connecter chaque maison à chaque service sans croisement (problème classique des trois maisons). Cependant, pour ce défi, une solution ordonnée est acceptée : par exemple, A-eau, B-électricité, C-gaz, en évitant les croisements visibles.",
  "logic_test_5_soft_skills": "Résolution de problèmes spatiaux, Patience, Concentration",
  "logic_test_6_title": "Défi 6 : Le poids des pièces",
  "logic_test_6_description": "Vous avez 9 pièces, dont 8 ont le même poids et 1 est plus légère. Vous avez une balance et pouvez faire 2 pesées pour trouver la pièce plus légère. Identifiez-la !",
  "logic_test_6_weigh": "Peser",
  "logic_test_6_answer_label": "Quelle pièce est plus légère ?",
  "logic_test_6_submit": "Valider",
  "logic_test_6_max_weighs": "Vous avez déjà fait 2 pesées !",
  "logic_test_6_empty_pans": "Veuillez placer des pièces sur les deux plateaux !",
  "logic_test_6_too_many_coins": "Trop de pièces ! La balance casse !",
  "logic_test_6_correction": "Divisez les 9 pièces en 3 groupes de 3. Pesez deux groupes : si un groupe est plus léger, la pièce légère est dedans ; sinon, elle est dans le groupe non pesé. Prenez ce groupe de 3, pesez deux pièces : si une est plus légère, c’est elle ; sinon, c’est la troisième.",
  "logic_test_6_soft_skills": "Raisonnement logique, Stratégie, Gestion du temps",
  "logic_test_7_title": "Défi 7 : Le code secret",
  "logic_test_7_description": "Un coffre-fort a un code à 4 chiffres. Vous avez 4 indices visuels pour deviner le code. Trouvez-le avant que le coffre ne s’autodétruise !",
  "logic_test_7_submit": "Valider",
  "logic_test_7_correction": "Utilisez les indices visuels pour déterminer chaque chiffre du code. Chaque symbole correspond à un chiffre du code à 4 chiffres.",
  "logic_test_7_soft_skills": "Observation, Mémoire, Gestion des distractions",
  "logic_test_8_title": "Défi 8 : La traversée du désert",
  "logic_test_8_description": "Vous devez traverser un désert avec une caravane. Vous avez 3 chameaux, chacun pouvant porter 1 litre d’eau, et le désert nécessite 5 litres pour être traversé. Vous pouvez remplir les chameaux à des oasis, mais chaque oasis disparaît après un certain temps. Combien d’oasis faut-il visiter pour traverser le désert ?",
  "logic_test_8_liters": "litres",
  "logic_test_8_answer_label": "Combien d’oasis faut-il visiter ?",
  "logic_test_8_submit": "Valider",
  "logic_test_8_correction": "Chaque chameau peut porter 1 litre d’eau, et vous avez 3 chameaux, donc vous pouvez obtenir 3 litres par oasis. Pour obtenir 5 litres, il faut visiter 2 oasis : 3 litres à la première, et 2 litres à la deuxième. Réponse : 2 oasis.",
  "logic_test_8_soft_skills": "Gestion des ressources, Planification, Prise de décision rapide",
  "logic_test_9_title": "Défi 9 : Les interrupteurs et les ampoules",
  "logic_test_9_description": "Vous êtes dans une pièce avec 3 interrupteurs (1, 2, 3) et 3 ampoules (A, B, C) dans une autre pièce. Chaque interrupteur contrôle une ampoule, mais vous ne savez pas lequel. Vous pouvez allumer/éteindre les interrupteurs, puis aller voir les ampoules une seule fois. Associez chaque interrupteur à son ampoule !",
  "logic_test_9_switch": "Interrupteur",
  "logic_test_9_visit": "Aller voir les ampoules",
  "logic_test_9_submit": "Valider",
  "logic_test_9_correction": "Une stratégie consiste à allumer l’interrupteur 1 pendant 5 minutes, puis l’éteindre et allumer l’interrupteur 2, puis aller voir : l’ampoule allumée est contrôlée par l’interrupteur 2, l’ampoule éteinte mais chaude par l’interrupteur 1, et l’ampoule éteinte et froide par l’interrupteur 3.",
  "logic_test_9_soft_skills": "Logique déductive, Stratégie, Gestion du temps",
  "logic_test_10_title": "Défi 10 : Le labyrinthe logique",
  "logic_test_10_description": "Vous êtes dans un labyrinthe avec 5 intersections. À chaque intersection, un indice logique vous indique la direction à prendre (par exemple, 'Si vous venez du nord, allez à l’est'). Trouvez la sortie en un minimum de mouvements !",
  "logic_test_10_up": "Haut",
  "logic_test_10_down": "Bas",
  "logic_test_10_left": "Gauche",
  "logic_test_10_right": "Droite",
  "logic_test_10_answer_label": "Nombre minimum de mouvements ?",
  "logic_test_10_submit": "Valider",
  "logic_test_10_clue_from": "Si vous venez de",
  "logic_test_10_clue_to": "allez à",
  "logic_test_10_direction_north": "nord",
  "logic_test_10_direction_south": "sud",
  "logic_test_10_direction_east": "est",
  "logic_test_10_direction_west": "ouest",
  "logic_test_10_no_clue": "Aucun indice ici.",
  "logic_test_10_fake_exit": "Sortie",
  "logic_test_10_correction": "Le labyrinthe est conçu pour nécessiter un minimum de 5 mouvements. Suivez les indices à chaque intersection pour atteindre la sortie en bas à droite.",
  "logic_test_10_soft_skills": "Raisonnement logique, Orientation spatiale, Gestion des distractions",
  "start_challenge": "Lancer le défi",
  "challenge_success": "Succès !",
  "challenge_failure": "Échec !",
  "soft_skills_evaluated": "Soft skills évalués :",
  "back_to_list": "Retour à la liste"
}
