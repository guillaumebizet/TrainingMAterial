{
  "welcome_message": "Welcome to Training Material",
  "candidate_name": "Candidate Name",
  "choose_lot": "Choose a Lot",
  "start_quiz": "Start Quiz",
  "github_pat": "Enter your GitHub PAT",
  "validate_pat": "Validate PAT",
  "pat_validated": "PAT validated successfully!",
  "reset_pat": "Reset PAT",
  "edit_questions": "Edit Questions",
  "filter_by_lot": "Filter by Lot",
  "all_lots": "All Lots",
  "add_question": "Add Question",
  "scores": "Scores",
  "result": "Result",
  "score_message": "Your score:",
  "save_results": "Save Results",
  "save_results_success": "Results saved successfully!",
  "save_current_score": "Save Current Score",
  "save_current_success": "Current score saved successfully!",
  "scores_local": "Score saved locally (no PAT provided).",
  "validate": "Validate",
  "no_questions": "No questions available.",
  "select_answer": "Please select an answer.",
  "enter_name": "Please enter your name.",
  "select_lot_prompt": "Please select a lot.",
  "questions_not_loaded": "Questions have not been loaded.",
  "no_questions_loaded": "No questions were loaded.",
  "no_questions_for_lot": "No questions available for this lot.",
  "no_questions_to_save": "No questions to save.",
  "no_pat": "No GitHub PAT provided.",
  "invalid_pat": "Invalid GitHub PAT.",
  "questions_load_error": "Error loading questions: ",
  "questions_error": "Error saving questions: ",
  "scores_error": "Error saving scores: ",
  "scores_saved": "Scores saved successfully!",
  "notification_scores": "Scores updated on GitHub.",
  "mermaid_editor_title": "Mermaid Live Editor",
  "mermaid_input_placeholder": "Write your Mermaid code here...",
  "mermaid_empty": "Enter Mermaid code to see the rendering.",
  "mermaid_load_error": "Error: Unable to load Mermaid.",
  "mermaid_render_error": "Mermaid rendering error",
  "mermaid_export_error": "No diagram to export. Please render a valid diagram first.",
  "loading": "Loading...",
  "converter_title": "Document Converter",
  "converter_file_label": "Upload a file:",
  "converter_text_label": "Or enter free text:",
  "converter_text_placeholder": "Enter text to convert...",
  "converter_from_label": "Convert from:",
  "converter_to_label": "Convert to:",
  "converter_button": "Convert",
  "converter_empty": "Please provide a file or text to convert.",
  "converter_error": "Error during conversion",
  "mammoth_load_error": "Error: Unable to load Mammoth.",
  "showdown_load_error": "Error: Unable to load Showdown.",
  "pdfjs_load_error": "Error: Unable to load pdf.js.",
  "file_read_error": "Error reading the file",
  "download_result": "Download the result",
  "json_validator_title": "JSON Validator",
  "json_input_placeholder": "Enter your JSON here... (e.g. {\"key\": \"value\"})",
  "json_validate_button": "Validate JSON",
  "json_empty": "Please enter a JSON to validate.",
  "json_valid": "JSON valid!",
  "json_invalid": "JSON invalid",
  "ajv_load_error": "Error: Unable to load AJV.",
  "cicd_course_title": "CI/CD Course",
  "cicd_course_content": "# Introduction to CI/CD\n\n## What is CI/CD?\n\n**CI/CD** (Continuous Integration / Continuous Deployment) is a DevOps practice that automates the software development process. It consists of two main parts:\n\n- **CI (Continuous Integration)**: Developers frequently integrate their code into a shared repository, and each integration is verified by automated tests.\n- **CD (Continuous Deployment)**: Tested code is automatically deployed to production or a staging environment.\n\n## Typical Steps in a CI/CD Pipeline\n\n1. **Code**: Developers write and submit code via a version control system (e.g., Git).\n2. **Build**: The code is compiled or prepared for testing.\n3. **Test**: Automated tests (unit, integration, etc.) are executed.\n4. **Deploy**: The code is deployed to an environment (staging or production).\n\n## Popular Tools\n\n- **Jenkins**: An open-source automation server.\n- **GitHub Actions**: Integrated with GitHub to automate workflows.\n- **GitLab CI/CD**: Integrated with GitLab to manage pipelines.\n- **CircleCI**: A cloud-based CI/CD platform.\n\n## Example GitHub Actions Workflow\n\n```yaml\nname: CI/CD Pipeline\non:\n  push:\n    branches: [ main ]\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n    - name: Set up Node.js\n      uses: actions/setup-node@v3\n      with:\n        node-version: '16'\n    - name: Install dependencies\n      run: npm install\n    - name: Run tests\n      run: npm test\n    - name: Deploy\n      run: echo \"Deploying to production\"\n```\n\n## Benefits of CI/CD\n\n- **Speed**: Deployments are more frequent and faster.\n- **Quality**: Automated tests reduce bugs.\n- **Collaboration**: Teams work more efficiently.",
  "cicd_render_error": "Error rendering the course",
  "marked_load_error": "Error: Unable to load Marked.",
  "start_quiz_tab": "Start Quiz",
  "edit_questions_tab": "Edit Questions",
  "scores_tab": "Scores",
  "mermaid_editor_tab": "Mermaid Live Editor",
  "converter_tab": "Document Converter",
  "json_validator_tab": "JSON Validator",
  "cicd_course_tab": "CI/CD Course",
  "logic_tests_tab": "Logic & Soft Skills Challenges",
  "close": "Close",
  "modal_details_title": "Question Details",
  "modal_question_fr": "Question (FR)",
  "modal_question_us": "Question (US)",
  "modal_options": "Options",
  "modal_lot": "Lot",
  "modal_type": "Type",
  "modal_details_unavailable": "Details unavailable or format not supported.",
  "correct": "Correct",
  "incorrect": "Incorrect",
  "incorrect_no_selection": "Incorrect (no answer selected)",
  "mermaid_cheat_sheet_title": "Help for Mermaid Live Editor",
  "mermaid_cheat_sheet_instructions": "- Write your Mermaid code in the field on the left.\n- The diagram will be automatically rendered on the right.\n- Use the buttons below to insert example code snippets.\n- Click \"Export as SVG\" or \"Export as PNG\" to save your diagram.",
  "mermaid_cheat_sheet_basic_syntax": "- Declare the diagram type with `graph TD` (top-down) or `graph LR` (left-to-right).\n- Use `-->` for a simple arrow, `==>` for a thick arrow, or `-.->` for a dotted arrow.\n- Add labels to arrows with `|Text|`, e.g., `A -->|Action| B`.\n- **Important:** Do not use semicolons (`;`) to separate statements. Use line breaks instead.",
  "mermaid_cheat_sheet_example_1_title": "Example 1: Simple Flowchart",
  "mermaid_cheat_sheet_example_1_code": "graph TD\n    A[Start] --> B[Step 1]\n    B --> C[Step 2]\n    C --> D[End]",
  "mermaid_cheat_sheet_example_2_title": "Example 2: Flowchart with Labels and Arrow Styles",
  "mermaid_cheat_sheet_example_2_code": "graph LR\n    A[User] -->|Login| B[Server]\n    B ==> C[Database]\n    C -.-> D[Cache]",
  "mermaid_cheat_sheet_example_3_title": "Example 3: Sequence Diagram",
  "mermaid_cheat_sheet_example_3_code": "sequenceDiagram\n    participant A as Alice\n    participant B as Bob\n    A->>B: Hello Bob!\n    B-->>A: Hi Alice!",
  "mermaid_cheat_sheet_example_4_title": "Example 4: Class Diagram",
  "mermaid_cheat_sheet_example_4_code": "classDiagram\n    class Animal {\n        +String name\n        +int age\n        +makeSound()\n    }\n    class Dog {\n        +String breed\n        +bark()\n    }\n    Animal <|-- Dog",
  "mermaid_cheat_sheet_example_5_title": "Example 5: State Diagram",
  "mermaid_cheat_sheet_example_5_code": "stateDiagram-v2\n    [*] --> Initial\n    Initial --> Processing : Start\n    Processing --> Success : Complete\n    Processing --> Failure : Error\n    Success --> [*]\n    Failure --> [*]",
  "mermaid_cheat_sheet_example_6_title": "Example 6: Flowchart with Custom Styles",
  "mermaid_cheat_sheet_example_6_code": "graph TD\n    A[Client] -->|Request| B[Server]\n    B --> C[Database]\n    C --> D[Response]\n    D --> B\n    B --> A\n    classDef important fill:#f9a825,stroke:#333,stroke-width:2px\n    class A,B important",
  "mermaid_cheat_sheet_supported_types": "- `graph TD`: Flowchart (top-down).\n- `graph LR`: Flowchart (left-to-right).\n- `sequenceDiagram`: Sequence diagram.\n- `classDiagram`: Class diagram.\n- `stateDiagram`: State diagram.\n- `gantt`: Gantt chart.\n- `pie`: Pie chart.\n- `erDiagram`: Entity-Relationship diagram.",
  "mermaid_cheat_sheet_common_errors": "- **Semicolons (`;`):** Do not add semicolons after arrows or at the end of lines. Incorrect: `A --> B;`. Correct: `A --> B`.\n- **Missing Spaces:** Ensure there is a space before and after arrows (`-->`, `|Text|`). Incorrect: `A-->B`. Correct: `A --> B`.\n- **Indentation:** Indentation is not strictly required but improves readability.\n- **Wrong Diagram Type:** Ensure the diagram type matches the syntax used (e.g., `sequenceDiagram` for sequence diagrams).",
  "mermaid_cheat_sheet_styling_tips": "- **Customize Nodes:** Use `classDef` to define styles. Example: `classDef important fill:#f9a825,stroke:#333,stroke-width:2px`.\n- **Apply Styles:** Add a class to a node with `class NodeName ClassName`, e.g., `class A important`.\n- **Arrow Colors:** Use `stroke` in `classDef` to change arrow colors.\n- **Themes:** Change the global theme with `mermaid.initialize({ theme: 'dark' })` (e.g., `default`, `dark`, `forest`, `neutral`).",
  "mermaid_cheat_sheet_use_cases": "- **Flowcharts:** Ideal for representing business processes or workflows (e.g., project steps).\n- **Sequence Diagrams:** Perfect for showing interactions between actors in a system (e.g., client-server communication).\n- **Class Diagrams:** Useful for modeling object-oriented structures (e.g., class relationships).\n- **State Diagrams:** Represent state transitions in a system (e.g., object lifecycle).\n- **Gantt Charts:** Plan projects with tasks and durations.\n- **Entity-Relationship Diagrams:** Model relational databases.",
  "mermaid_cheat_sheet_tips": "- Use square brackets for rectangular nodes: `A[Text]`.\n- Use parentheses for round nodes: `A(Text)`.\n- Use curly braces for diamond nodes: `A{Text}`.\n- Add subgraphs with `subgraph Name [Title]` to organize complex diagrams.\n- Use comments with `%% Comment` to document your code.\n- Test your diagrams with simple examples before adding complexity.",
  "mermaid_cheat_sheet_show": "Show Help",
  "mermaid_cheat_sheet_hide": "Hide Help",
  "mermaid_cheat_sheet_insert_example_1": "Insert Example 1",
  "mermaid_cheat_sheet_insert_example_2": "Insert Example 2",
  "mermaid_cheat_sheet_insert_example_3": "Insert Example 3",
  "mermaid_cheat_sheet_insert_example_4": "Insert Example 4",
  "mermaid_cheat_sheet_insert_example_5": "Insert Example 5",
  "mermaid_cheat_sheet_insert_example_6": "Insert Example 6",
  "export_svg": "Export as SVG",
  "export_png": "Export as PNG",
  "logic_tests_title": "Logic & Soft Skills Challenges",
  "logic_test_1_title": "Challenge 1: The Clock Angle at 3:15 PM",
  "logic_test_1_description": "It’s 3:15 PM. What is the angle in degrees between the hour and minute hands? Be careful, the clock might be a bit tricky!",
  "logic_test_1_answer_label": "Your answer (in degrees):",
  "logic_test_1_submit": "Submit",
  "logic_test_1_correction": "At 3:00 PM, the hour hand is on the 3 (90°). At 3:15 PM, the minute hand is also on the 3 (90°), but the hour hand has moved a quarter of the next hour (one hour slot = 30°, so a quarter = 7.5°). The angle between them is therefore 7.5°.",
  "logic_test_1_soft_skills": "Analytical Thinking, Focus Under Pressure",
  "logic_test_2_title": "Challenge 2: Sock Colors",
  "logic_test_2_description": "You have a drawer with 6 black socks, 10 red socks, and 8 blue socks, mixed in the dark. How many socks must you draw to be sure of having a pair of the same color? Drag the socks into the area below to find out!",
  "logic_test_2_hint": "Hint: Think about the worst-case scenario to guarantee a pair!",
  "logic_test_2_correction": "There are 3 colors, so in the worst case, you draw one sock of each color (3 socks). The 4th sock will definitely be the same color as one of the previous ones, ensuring a pair. Answer: 4 socks.",
  "logic_test_2_soft_skills": "Probabilistic Reasoning, Quick Decision-Making, Distraction Management",
  "start_challenge": "Start Challenge",
  "challenge_success": "Success!",
  "challenge_failure": "Failed!",
  "soft_skills_evaluated": "Soft skills evaluated:",
  "back_to_list": "Back to List"
}
